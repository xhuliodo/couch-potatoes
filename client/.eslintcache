[{"/home/xhuliodo/Desktop/couch-potatoes/client/src/index.js":"1","/home/xhuliodo/Desktop/couch-potatoes/client/src/App.js":"2","/home/xhuliodo/Desktop/couch-potatoes/client/src/components/MenuBar.js":"3","/home/xhuliodo/Desktop/couch-potatoes/client/src/components/SelectingGenre.js":"4","/home/xhuliodo/Desktop/couch-potatoes/client/src/components/SelectingGenreProvider.js":"5","/home/xhuliodo/Desktop/couch-potatoes/client/src/components/Footer.js":"6","/home/xhuliodo/Desktop/couch-potatoes/client/src/components/SingleSelectingGenre.js":"7"},{"size":168,"mtime":1610403861249,"results":"8","hashOfConfig":"9"},{"size":1762,"mtime":1611261272461,"results":"10","hashOfConfig":"9"},{"size":3255,"mtime":1611261092516,"results":"11","hashOfConfig":"9"},{"size":1840,"mtime":1611261137781,"results":"12","hashOfConfig":"9"},{"size":1770,"mtime":1611261088720,"results":"13","hashOfConfig":"9"},{"size":107,"mtime":1611261090163,"results":"14","hashOfConfig":"9"},{"size":1158,"mtime":1611261086826,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"mxb635",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/xhuliodo/Desktop/couch-potatoes/client/src/index.js",[],["33","34"],"/home/xhuliodo/Desktop/couch-potatoes/client/src/App.js",[],"/home/xhuliodo/Desktop/couch-potatoes/client/src/components/MenuBar.js",["35","36","37"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport {\r\n  ClickAwayListener,\r\n  Container,\r\n  Grow,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nexport default function MenuBar({ darkThemeIcon, darkTheme, setDarkTheme }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const renderMenu = (\r\n    <Popper\r\n      open={open}\r\n      anchorEl={anchorRef.current}\r\n      role={undefined}\r\n      transition\r\n      disablePortal\r\n    >\r\n      {({ TransitionProps, placement }) => (\r\n        <Grow\r\n          {...TransitionProps}\r\n          style={{\r\n            transformOrigin:\r\n              placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n          }}\r\n        >\r\n          <Paper>\r\n            <ClickAwayListener onClickAway={handleClose}>\r\n              <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n              </MenuList>\r\n            </ClickAwayListener>\r\n          </Paper>\r\n        </Grow>\r\n      )}\r\n    </Popper>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" noWrap>\r\n            Couch Potatoes\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            {darkThemeIcon}\r\n            <Switch\r\n              checked={darkTheme}\r\n              onChange={() => {\r\n                setDarkTheme(!darkTheme);\r\n              }}\r\n            />\r\n            chulio\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"account of current user\"\r\n              ref={anchorRef}\r\n              aria-controls={open ? \"menu-list-grow\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","/home/xhuliodo/Desktop/couch-potatoes/client/src/components/SelectingGenre.js",["38","39"],"import { useState } from \"react\";\r\nimport { Badge, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\nimport \"./SelectingGenreProvider.css\";\r\n\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\nimport { request, gql } from \"graphql-request\";\r\n\r\nconst useGenres = () => {\r\n  return useQuery(\"genres\", async () => {\r\n    const data = await request(\r\n      \"http://localhost:4001/graphql\",\r\n      gql`\r\n        query {\r\n          Genre {\r\n            _id\r\n            name\r\n          }\r\n        }\r\n      `\r\n    );\r\n    const { Genre } = await data;\r\n    return Genre;\r\n  });\r\n};\r\n\r\nexport default function SelectingGenre() {\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const queryClient = useQueryClient();\r\n  const { status, data, error, isFetching } = useGenres();\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\">Select at least 3 genres:</Typography>\r\n      {status === \"loading\" ? (\r\n        <span>Fetching data</span>\r\n      ) : status === \"error\" ? (\r\n        <span>Error: {error.message}</span>\r\n      ) : (\r\n        data.map((g) => (\r\n          <Badge\r\n            key={g._id}\r\n            badgeContent={selected ? <DoneOutlineIcon /> : null}\r\n            onClick={() => {\r\n              setSelected(!selected);\r\n            }}\r\n            color=\"secondary\"\r\n            style={{ padding: \"16px 6px!important\" }}\r\n          >\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Movie Genre\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {g.name}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Badge>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/home/xhuliodo/Desktop/couch-potatoes/client/src/components/SelectingGenreProvider.js",[],"/home/xhuliodo/Desktop/couch-potatoes/client/src/components/Footer.js",[],"/home/xhuliodo/Desktop/couch-potatoes/client/src/components/SingleSelectingGenre.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":7,"column":8,"nodeType":"46","messageId":"47","endLine":7,"endColumn":13},{"ruleId":"44","severity":1,"message":"48","line":9,"column":8,"nodeType":"46","messageId":"47","endLine":9,"endColumn":12},{"ruleId":"44","severity":1,"message":"49","line":13,"column":3,"nodeType":"46","messageId":"47","endLine":13,"endColumn":12},{"ruleId":"44","severity":1,"message":"50","line":30,"column":9,"nodeType":"46","messageId":"47","endLine":30,"endColumn":20},{"ruleId":"44","severity":1,"message":"51","line":31,"column":32,"nodeType":"46","messageId":"47","endLine":31,"endColumn":42},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Container' is defined but never used.","'queryClient' is assigned a value but never used.","'isFetching' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]