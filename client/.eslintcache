[{"E:\\couch-potatoes\\client\\src\\index.js":"1","E:\\couch-potatoes\\client\\src\\App.js":"2","E:\\couch-potatoes\\client\\src\\components\\MenuBar.js":"3","E:\\couch-potatoes\\client\\src\\components\\SelectingGenre.js":"4"},{"size":168,"mtime":1610403861249,"results":"5","hashOfConfig":"6"},{"size":1603,"mtime":1610547148326,"results":"7","hashOfConfig":"6"},{"size":3255,"mtime":1610459473856,"results":"8","hashOfConfig":"6"},{"size":1531,"mtime":1610548148737,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1f6wbdu",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\couch-potatoes\\client\\src\\index.js",[],["20","21"],"E:\\couch-potatoes\\client\\src\\App.js",[],"E:\\couch-potatoes\\client\\src\\components\\MenuBar.js",["22","23","24"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport {\r\n  ClickAwayListener,\r\n  Container,\r\n  Grow,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nexport default function MenuBar({ darkThemeIcon, darkTheme, setDarkTheme }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const renderMenu = (\r\n    <Popper\r\n      open={open}\r\n      anchorEl={anchorRef.current}\r\n      role={undefined}\r\n      transition\r\n      disablePortal\r\n    >\r\n      {({ TransitionProps, placement }) => (\r\n        <Grow\r\n          {...TransitionProps}\r\n          style={{\r\n            transformOrigin:\r\n              placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n          }}\r\n        >\r\n          <Paper>\r\n            <ClickAwayListener onClickAway={handleClose}>\r\n              <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n              </MenuList>\r\n            </ClickAwayListener>\r\n          </Paper>\r\n        </Grow>\r\n      )}\r\n    </Popper>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" noWrap>\r\n            Couch Potatoes\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            {darkThemeIcon}\r\n            <Switch\r\n              checked={darkTheme}\r\n              onChange={() => {\r\n                setDarkTheme(!darkTheme);\r\n              }}\r\n            />\r\n            chulio\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"account of current user\"\r\n              ref={anchorRef}\r\n              aria-controls={open ? \"menu-list-grow\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","E:\\couch-potatoes\\client\\src\\components\\SelectingGenre.js",["25","26","27","28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":7,"column":8,"nodeType":"36","messageId":"37","endLine":7,"endColumn":13},{"ruleId":"34","severity":1,"message":"38","line":9,"column":8,"nodeType":"36","messageId":"37","endLine":9,"endColumn":12},{"ruleId":"34","severity":1,"message":"39","line":13,"column":3,"nodeType":"36","messageId":"37","endLine":13,"endColumn":12},{"ruleId":"34","severity":1,"message":"40","line":28,"column":9,"nodeType":"36","messageId":"37","endLine":28,"endColumn":20},{"ruleId":"34","severity":1,"message":"41","line":29,"column":11,"nodeType":"36","messageId":"37","endLine":29,"endColumn":17},{"ruleId":"34","severity":1,"message":"42","line":29,"column":19,"nodeType":"36","messageId":"37","endLine":29,"endColumn":23},{"ruleId":"34","severity":1,"message":"43","line":29,"column":25,"nodeType":"36","messageId":"37","endLine":29,"endColumn":30},{"ruleId":"34","severity":1,"message":"44","line":29,"column":32,"nodeType":"36","messageId":"37","endLine":29,"endColumn":42},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Container' is defined but never used.","'queryClient' is assigned a value but never used.","'status' is assigned a value but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'isFetching' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]