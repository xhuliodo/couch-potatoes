[{"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\index.js":"1","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\App.js":"2","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\history.js":"4","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\MenuBar.js":"5","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\Footer.js":"6","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\GettingToKnowUserPage.js":"7","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\WelcomePage.js":"8","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\Solo.js":"9","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\SelectingGenrePage.js":"10","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\GenreBasedRec.js":"11","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\AuthLoading.js":"12","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\useGraphqlClient.js":"13","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\SelectingGenre.js":"14","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\UserBasedRec.js":"15","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\WatchlistProvider.js":"16","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\DataStateMovieCard.js":"17","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\context\\movies.js":"18","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\icons\\GenresIcon.js":"19","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\MovieCard.js":"20","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\WatchlistCard.js":"21","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\RateFeedback.js":"22","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\rateMovie.js":"23"},{"size":892,"mtime":1613057712694,"results":"24","hashOfConfig":"25"},{"size":3065,"mtime":1613375022172,"results":"26","hashOfConfig":"25"},{"size":5201,"mtime":1613057712698,"results":"27","hashOfConfig":"25"},{"size":87,"mtime":1612350700437,"results":"28","hashOfConfig":"25"},{"size":4163,"mtime":1613375022181,"results":"29","hashOfConfig":"25"},{"size":171,"mtime":1612434504612,"results":"30","hashOfConfig":"25"},{"size":2904,"mtime":1612439926633,"results":"31","hashOfConfig":"25"},{"size":186,"mtime":1612163979974,"results":"32","hashOfConfig":"25"},{"size":4519,"mtime":1613375022198,"results":"33","hashOfConfig":"25"},{"size":3080,"mtime":1613125812257,"results":"34","hashOfConfig":"25"},{"size":1540,"mtime":1613375022179,"results":"35","hashOfConfig":"25"},{"size":735,"mtime":1613375022174,"results":"36","hashOfConfig":"25"},{"size":492,"mtime":1612858475975,"results":"37","hashOfConfig":"25"},{"size":1297,"mtime":1612163979962,"results":"38","hashOfConfig":"25"},{"size":1901,"mtime":1613375022192,"results":"39","hashOfConfig":"25"},{"size":1151,"mtime":1613375022195,"results":"40","hashOfConfig":"25"},{"size":808,"mtime":1613375022224,"results":"41","hashOfConfig":"25"},{"size":260,"mtime":1612856146514,"results":"42","hashOfConfig":"25"},{"size":17846,"mtime":1612165115588,"results":"43","hashOfConfig":"25"},{"size":6082,"mtime":1613384997421,"results":"44","hashOfConfig":"25"},{"size":3216,"mtime":1613133432507,"results":"45","hashOfConfig":"25"},{"size":1777,"mtime":1613375022189,"results":"46","hashOfConfig":"25"},{"size":1105,"mtime":1613133429430,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mt87u3",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\index.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\App.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\history.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\MenuBar.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\Footer.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\GettingToKnowUserPage.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\WelcomePage.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\Solo.js",["96"],"import {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  makeStyles,\r\n  Paper,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { People, WatchLater } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport GenresIcon from \"../utils/icons/GenresIcon\";\r\nimport UserBasedRec from \"../components/UserBasedRec\";\r\nimport GenreBasedRec from \"../components/GenreBasedRec\";\r\nimport WatchlistProvider from \"../components/WatchlistProvider\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport AuthLoading from \"../components/AuthLoading\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useGraphqlClient } from \"../utils/useGraphqlClient\";\r\nimport { gql } from \"graphql-request\";\r\nimport DataStateMovieCard from \"../components/DataStateMovieCard\";\r\n\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nexport const Solo = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [nav, setNav] = useState(1);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setNav(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setNav(index);\r\n  };\r\n\r\n  const graphqlClient = useGraphqlClient();\r\n\r\n  // redirect rule for people who have not finished the setup\r\n  const useFavoriteGenres = () => {\r\n    return useQuery([\"genres\"], async () => {\r\n      const data = await (await graphqlClient).request(\r\n        gql`\r\n          query {\r\n            getFavoriteGenres {\r\n              genreId\r\n            }\r\n          }\r\n        `\r\n      );\r\n      const { getFavoriteGenres } = data;\r\n      if (getFavoriteGenres.length === 0) {\r\n        props.history.push(\"/getting-to-know-1\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const { isLoading, isError } = useFavoriteGenres();\r\n\r\n  return (\r\n    <Paper elevation={0}>\r\n      <Paper elevation={5} style={{ padding: \"12px 0\" }}>\r\n        <BottomNavigation\r\n          value={nav}\r\n          onChange={handleChange}\r\n          showLabels\r\n          style={{ width: \"fit-content\", margin: \"0 auto\" }}\r\n        >\r\n          <BottomNavigationAction\r\n            style={{ paddingRight: \"10px\" }}\r\n            label=\"Popular by Genre\"\r\n            value={0}\r\n            icon={<GenresIcon />}\r\n            classes={{ selected: classes.selected }}\r\n          />\r\n          <BottomNavigationAction\r\n            style={{ margin: \"0 10px\" }}\r\n            label=\"Other users also liked\"\r\n            value={1}\r\n            icon={<People />}\r\n            classes={{ selected: classes.selected }}\r\n          />\r\n          <BottomNavigationAction\r\n            style={{ paddingLeft: \"10px\" }}\r\n            label=\"Watchlist\"\r\n            value={2}\r\n            icon={<WatchLater />}\r\n            classes={{ selected: classes.selected }}\r\n          />\r\n        </BottomNavigation>\r\n      </Paper>\r\n\r\n      {isLoading ? (\r\n        <DataStateMovieCard message=\"Fetching movies...\" type=\"loading\" />\r\n      ) : isError ? (\r\n        <DataStateMovieCard message=\"Something went wrong...\" />\r\n      ) : (\r\n        // no animation version\r\n        // <div style={{ marginTop: \"15px\" }}>\r\n        //   {nav === \"userBased\" ? (\r\n        //     <UserBasedRec />\r\n        //   ) : nav === \"genreBased\" ? (\r\n        //     <GenreBasedRec startedFromTheBottomNowWeHere={true} />\r\n        //   ) : (\r\n        //     <WatchlistProvider />\r\n        //   )}\r\n        // </div>\r\n        <SwipeableViews\r\n          style={{ marginTop: \"15px\" }}\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={nav}\r\n          onChangeIndex={handleChangeIndex}\r\n          springConfig={{\r\n            duration: \"0.5s\",\r\n            easeFunction: \"cubic-bezier(0.42, 0, 0.58, 1)\",\r\n            delay: \"0s\",\r\n          }}\r\n        >\r\n          <Panel value={nav} index={0} dir={theme.direction}>\r\n            <GenreBasedRec startedFromTheBottomNowWeHere={true} />\r\n          </Panel>\r\n          <Panel value={nav} index={1} dir={theme.direction}>\r\n            <UserBasedRec />\r\n          </Panel>\r\n          <Panel value={nav} index={2} dir={theme.direction}>\r\n            <WatchlistProvider />\r\n          </Panel>\r\n        </SwipeableViews>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Panel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return value === index && <div>{children}</div>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selected: { color: `${theme.palette.secondary.dark}!important` },\r\n}));\r\n\r\nexport default withAuthenticationRequired(Solo, {\r\n  onRedirecting: () => <AuthLoading />,\r\n});\r\n","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\pages\\SelectingGenrePage.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\GenreBasedRec.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\AuthLoading.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\useGraphqlClient.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\SelectingGenre.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\UserBasedRec.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\WatchlistProvider.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\DataStateMovieCard.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\context\\movies.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\icons\\GenresIcon.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\MovieCard.js",["97"],"import { Button, Grid, Paper, Tooltip } from \"@material-ui/core\";\r\nimport { Card, CardWrapper } from \"@xhuliodo/react-swipeable-cards\";\r\n\r\nimport { useMutation } from \"react-query\";\r\nimport { useGraphqlClient } from \"../utils/useGraphqlClient\";\r\nimport { gql } from \"graphql-request\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  Favorite,\r\n  SkipNext,\r\n  ThumbDown,\r\n  VisibilityOff,\r\n  WatchLater,\r\n} from \"@material-ui/icons\";\r\nimport { useMovieStore } from \"../context/movies\";\r\nimport { rateMovie } from \"../utils/rateMovie\";\r\nimport { openRateFeedbackExported } from \"./RateFeedback\";\r\nimport RateFeedback from \"./RateFeedback\";\r\n\r\nexport default function MovieCard({\r\n  movies,\r\n  skip,\r\n  setSkip,\r\n  refetch,\r\n  startedFromTheBottomNowWeHere = false,\r\n}) {\r\n  const { increaseRatedMovies } = useMovieStore();\r\n\r\n  const graphqlClient = useGraphqlClient();\r\n\r\n  const rate = useMutation((mutationData) =>\r\n    rateMovie(mutationData, graphqlClient)\r\n  );\r\n\r\n  const handleRate = (action) => {\r\n    console.log(action);\r\n    const mutationData = {\r\n      movieId: movies[0].movieId,\r\n      action,\r\n      successFunc: () => successFunc(action),\r\n    };\r\n    rate.mutate(mutationData);\r\n  };\r\n\r\n  const successFunc = (action) => {\r\n    openRateFeedbackExported(action);\r\n    nextMovie();\r\n    increaseRatedMovies();\r\n  };\r\n\r\n  const feedback = (action) => <RateFeedback action={action} />;\r\n\r\n  const addToWatchlist = useMutation(async ({ movieId }) => {\r\n    const data = (await graphqlClient).request(\r\n      gql`\r\n        mutation {\r\n          addToWatchlist(movieId: ${movieId}) {\r\n            movieId\r\n          }\r\n        }\r\n      `\r\n    );\r\n\r\n    const { addToWatchlist } = await data;\r\n    if (addToWatchlist === null) {\r\n      console.log(\"the watchlist did not get filled 😏\");\r\n    } else {\r\n      console.log(\r\n        \"you added to playlist the movie with id\",\r\n        addToWatchlist.movieId\r\n      );\r\n      openRateFeedbackExported(\"watchlater\");\r\n      nextMovie();\r\n    }\r\n  });\r\n\r\n  const nextMovie = () => {\r\n    movies.shift();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (movies.length === 0) {\r\n      refetch();\r\n    }\r\n  }, [movies, rate, refetch]);\r\n\r\n  const ActionButtons = (props) => {\r\n    const newProps = {};\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          {...newProps}\r\n          style={{ position: \"absolute\", bottom: \"45px\" }}\r\n          container\r\n          justify=\"center\"\r\n          className=\"cards_container\"\r\n        >\r\n          {startedFromTheBottomNowWeHere ? (\r\n            <Tooltip placement=\"top\" arrow title=\"Add to watchlist\">\r\n              <Button\r\n                style={buttonStyling}\r\n                onClick={() => {\r\n                  const mutationData = {\r\n                    movieId: movies[0].movieId,\r\n                  };\r\n                  addToWatchlist.mutate(mutationData);\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                <WatchLater fontSize=\"inherit\" />\r\n              </Button>\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip placement=\"top\" arrow title=\"Ignore...\">\r\n              <Button\r\n                style={buttonStyling}\r\n                onClick={() => {\r\n                  nextMovie();\r\n                  setSkip(skip + 1);\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                <SkipNext fontSize=\"inherit\" />\r\n              </Button>\r\n            </Tooltip>\r\n          )}\r\n          <Tooltip placement=\"top\" arrow title=\"Hated it!\">\r\n            <Button\r\n              style={buttonStyling}\r\n              onClick={() => handleRate(\"hate\")}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              <ThumbDown fontSize=\"inherit\" />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip placement=\"top\" arrow title=\"Loved it!\">\r\n            <Button\r\n              style={buttonStyling}\r\n              onClick={() => handleRate(\"love\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              <Favorite fontSize=\"inherit\" />\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n        {/* to return the watchlater strip uncomment this part\r\n        and set null to started from the bottom before the skip button */}\r\n        {/* {startedFromTheBottomNowWeHere ? (\r\n          <Container\r\n            style={{ position: \"absolute\", bottom: \"2px\" }}\r\n            maxWidth=\"sm\"\r\n          >\r\n            <Button\r\n              style={{ marginTop: \"15px\" }}\r\n              color=\"primary\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                const mutationData = {\r\n                  movieId: movies[0].movieId,\r\n                };\r\n                addToWatchlist.mutate(mutationData);\r\n              }}\r\n            >\r\n              Add to watchlist\r\n            </Button>\r\n          </Container>\r\n        ) : null} */}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardWrapper\r\n        // addEndCard={waitForMoreData.bind(this)}\r\n        style={{ paddingTop: \"0px\" }}\r\n      >\r\n        {movies.map((m) => (\r\n          <Card\r\n            key={m.movieId}\r\n            onSwipeLeft={() => {\r\n              handleRate(\"hate\");\r\n              feedback(\"hate\");\r\n            }}\r\n            onSwipeRight={() => handleRate(\"love\")}\r\n            swipeSensitivity={100}\r\n            style={{\r\n              backgroundImage: `url(${m.posterUrl})`,\r\n              backgroundSize: \"contain\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundPosition: \"center\",\r\n            }}\r\n          >\r\n            <Paper className=\"secondMovie_cardText\">\r\n              <h3>\r\n                {m.title} <i>({m.releaseYear})</i>\r\n              </h3>\r\n            </Paper>\r\n          </Card>\r\n        ))}\r\n        <RateFeedback />\r\n        <ActionButtons />\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst buttonStyling = {\r\n  marginLeft: \"1.5vw\",\r\n  marginRight: \"1.5vw\",\r\n  fontSize: \"35px\",\r\n  maxWidth: \"100px\",\r\n  width: \"30vw\",\r\n};\r\n","C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\WatchlistCard.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\components\\RateFeedback.js",[],"C:\\Users\\xhulio.doda\\Desktop\\cp\\client\\src\\utils\\rateMovie.js",[],{"ruleId":"98","severity":1,"message":"99","line":135,"column":38,"nodeType":"100","messageId":"101","endLine":135,"endColumn":43},{"ruleId":"98","severity":1,"message":"102","line":12,"column":3,"nodeType":"100","messageId":"101","endLine":12,"endColumn":16},"no-unused-vars","'other' is assigned a value but never used.","Identifier","unusedVar","'VisibilityOff' is defined but never used."]